{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      /*\r\n       *  **********change base url according to your server**************\r\n       */\n\n      this.baseUrl = \"http://localhost:8088/user\";\n      this.httpHeaders = new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      });\n      this.options = {\n        headers: this.httpHeaders\n      };\n    }\n    /* ---method to add user---- */\n\n\n    addUser(user) {\n      console.log(JSON.stringify(user));\n      return this.http.post(`${this.baseUrl}/addUser`, JSON.stringify(user), this.options).pipe(catchError(this.errorHandler));\n    }\n    /* -----method to add booking---- */\n\n\n    addBooking(busNumber, userId, passengers) {\n      return this.http.post(`${this.baseUrl}/addBooking/${userId}/${busNumber}`, JSON.stringify(passengers), this.options).pipe(catchError(this.errorHandler));\n    }\n    /* ---method to get bookings */\n\n\n    getBookingByUser(id) {\n      return this.http.get(this.baseUrl + \"/getBookingByUser/\" + id).pipe(catchError(this.errorHandler));\n    }\n    /* ---method to delete booking--- */\n\n\n    deleteBooking(bookingId, userId) {\n      return this.http.delete(this.baseUrl + \"/deleteBooking/\" + bookingId + \"/\" + userId).pipe(catchError(this.errorHandler));\n    }\n    /* ----method to update user----- */\n\n\n    updateUser(user) {\n      return this.http.post(this.baseUrl + \"/updateUser\", JSON.stringify(user), this.options).pipe(catchError(this.errorHandler));\n    }\n    /* -------method to get user------- */\n\n\n    getUser(id) {\n      return this.http.get(this.baseUrl + \"/getUser/\" + id).pipe(catchError(this.errorHandler));\n    }\n    /* -----method to get bus----------- */\n\n\n    getBusByNumber(busNumber) {\n      return this.http.get(`${this.baseUrl}/getBusByNumber/${busNumber}`).pipe(catchError(this.errorHandler));\n    }\n\n    updatePassenger(passenger) {\n      return this.http.post(`${this.baseUrl}/updatePassenger`, JSON.stringify(passenger), this.options).pipe(catchError(this.errorHandler));\n    }\n\n    userLogin(user) {\n      console.log(JSON.stringify(user));\n      return this.http.post(this.baseUrl + \"/userLogin\", JSON.stringify(user), this.options).pipe(catchError(this.errorHandler));\n    }\n\n    searchBus(from, to, date) {\n      return this.http.get(`${this.baseUrl}/findBus/${to}/${from}/${date}`).pipe(catchError(this.errorHandler));\n    }\n\n    errorHandler(error) {\n      let errorMessage = \"\";\n\n      if (error.error instanceof ErrorEvent) {\n        // client-side error\n        errorMessage = `Error: ${error.error.message}`;\n      } else {\n        // server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: \"root\"\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}