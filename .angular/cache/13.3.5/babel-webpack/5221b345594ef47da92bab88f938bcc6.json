{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AdminService = /*#__PURE__*/(() => {\n  class AdminService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = \"http://localhost:9090/admin\";\n      this.httpHeaders = new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      });\n      this.options = {\n        headers: this.httpHeaders\n      };\n    }\n\n    adminLogin(admin) {\n      return this.http.post(`${this.baseUrl}/adminLogin`, JSON.stringify(admin), this.options).pipe(catchError(this.errorHandler));\n    }\n\n    getAdminDetails(id) {\n      return this.http.get(`${this.baseUrl}/getAdmin/${id}`).pipe(catchError(this.errorHandler));\n    }\n\n    addBus(bus) {\n      return this.http.post(`${this.baseUrl}/addBusDetails`, JSON.stringify(bus), this.options).pipe(catchError(this.errorHandler));\n    }\n\n    modifyBus(bus) {\n      return this.http.post(`${this.baseUrl}/updateBusDetails`, JSON.stringify(bus), this.options).pipe(catchError(this.errorHandler));\n    }\n\n    removeBus(busNo) {\n      return this.http.delete(`${this.baseUrl}/deleteBusDetails/${busNo}`).pipe(catchError(this.errorHandler));\n    }\n\n    viewAllBus() {\n      return this.http.get(`${this.baseUrl}/getAllBusDetails`).pipe(catchError(this.errorHandler));\n    }\n\n    viewAllUsers() {\n      return this.http.get(`${this.baseUrl}/getAllUsers`).pipe(catchError(this.errorHandler));\n    }\n\n    deleteUser(userId) {\n      const url = `${this.baseUrl}/deleteUserDetails/${userId}`;\n      return this.http.delete(url).pipe(catchError(this.errorHandler));\n    }\n\n    getBookingsByUser(userId) {\n      const url = `${this.baseUrl}/getBookingByUser/${userId}`;\n      return this.http.get(url);\n    }\n\n    deleteBooking(bookingId, userId) {\n      const url = `${this.baseUrl}/deleteBooking/${bookingId}/${userId}`;\n      return this.http.delete(url).pipe(catchError(this.errorHandler));\n    }\n\n    errorHandler(error) {\n      let errorMessage = \"\";\n\n      if (error.error instanceof ErrorEvent) {\n        // client-side error\n        errorMessage = `Error: ${error.error.message}`;\n      } else {\n        // server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n\n  }\n\n  AdminService.ɵfac = function AdminService_Factory(t) {\n    return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AdminService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminService,\n    factory: AdminService.ɵfac,\n    providedIn: \"root\"\n  });\n  return AdminService;\n})();","map":null,"metadata":{},"sourceType":"module"}